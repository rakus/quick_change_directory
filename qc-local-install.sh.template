#!/bin/bash
#
# FILE: qc-local-install.sh
#
# ABSTRACT: Install Quick Change Directory to users HOME directory
#
# AUTHOR: Ralf Schandl
#
# CREATED: 2020-10-11
#

script_dir="$(cd "$(dirname "$0")" && pwd)" || exit 1
script_name="$(basename "$0")"
script_file="$script_dir/$script_name"

rc_file="quick_change_directory.shinc"

execute()
{
    if [ "$execute" == "true" ]; then
        "$@"
    else
        echo " # $@"
    fi
}

# Add sourcing quick_change_directory.shinc to shell rc-files
add_to_init_file()
{
    typeset file="$1"

    if [ ! -e "$file" ]; then
        echo "  SKIPPED: File does not exist: $file"
        return
    fi

    if grep "$rc_file" "$file" >/dev/null 2>&1; then
        echo "  SKIPPED: The file $rc_file seems to be already sourced from $file:"
        grep "$rc_file" "$file" | sed "s/^/  > /"
    else
        echo "Adding $rc_file to $file..."
        # to complex for run_cmd (because of redir)

        if [ "$execute" = "true" ]; then
            echo "[ -f \"\$HOME/.qc/$rc_file\" ] && . \$HOME/.qc/$rc_file" >> "$file"
        else
            echo ' # echo "[ -f \"\$HOME/.qc/$rc_file\" ] && . \$HOME/.qc/$rc_file" >> "$file"'
        fi
    fi
}

# Add qc-build-index.sh to crontab
add_to_crontab()
{
    if crontab -l | grep "qc-build-index.sh" >/dev/null 2>&1; then
        echo "  SKIPPED: Crontab entry seems to exist:"
        crontab -l | grep "qc-build-index.sh" | sed "s/^/  > /"
    else
        CRE="*/10 * * * * \${HOME}/.qc/qc-build-index.sh >\${HOME}/.qc/qc-build-index.log 2>&1"
        echo "Installing crontab entry:"
        echo "    $CRE"
        if [ "$execute" = "true" ]; then
            (crontab -l 2>/dev/null; echo "$CRE") | crontab -
        else
            echo " # (crontab -l 2>/dev/null; echo \"$CRE\") | crontab -"
        fi
    fi
}

usage()
{
    echo "USAGE: $script_name [-X] [-f]"
    echo "   -X    really execute - without it only prints what would be done"
    echo "   -f    force - overwrite existing files"
    exit 1
}


#---------[ MAIN ]-------------------------------------------------------------

echo ""
echo "QC: Self Extracting Installer"
echo ""

execute=""
force=""
while getopts "Xf" o "$@"; do
    case $o in
        X) execute="true"
            ;;
        f) force="true"
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))
if [ $# -ne 0 ]; then
    usage
fi

if [ "$execute" != "true" ]; then
    echo "=================================================="
    echo " Simulation mode - use '-X' to really execute"
    echo "=================================================="
fi

cd "$HOME" || exit 1

idx_cfg_backup=""
if [ -e "$HOME/.qc/qc-index.cfg" ]; then
    echo "Creating backup of existing index config. Will be restored later."
    idx_cfg_backup="$HOME/.qc/qc-index.cfg.backup.$(date +%s)"
    execute cp "$HOME/.qc/qc-index.cfg" "$idx_cfg_backup"
    echo
fi

ARCHIVE_OFFSET=$(awk '/^__ARCHIVE_BELOW__/ {print NR + 1; exit 0; }' "$script_file")

would_overwrite=""
if [ "$force" != "true" ]; then
    for fn in $(tail -n+$ARCHIVE_OFFSET "$script_file" | tar -tf -| grep -v '/$'); do
        if [ -e "$HOME/$fn" ]; then
            would_overwrite="true"
            echo "File exists: $fn"
        fi
    done
    if [ -n "$would_overwrite" ]; then
        echo >&2 ""
        echo >&2 "Some files exist. They will be replaced."
        if [ "$execute" = "true" ]; then
            read -p "Continue? [y/n] " -r reply
            if [ "$reply" != "y" ]; then
                echo "Good by"
                exit 1
            fi
        else
            echo "Continue? [y/n] y"
        fi
    fi
fi

echo
echo "Extracting files ..."
if [ "$execute" = "true" ]; then
    tail -n+$ARCHIVE_OFFSET $0 | tar -xvf -
else
    echo " # tail -n+$ARCHIVE_OFFSET $0 | tar -xvf -"
    echo " # Would extract:"
    tail -n+$ARCHIVE_OFFSET $0 | tar -tf - | sed "s/^/ # /"
fi

if [ -n "$idx_cfg_backup" ]; then
    echo ""
    echo "Restoring index config"
    execute cp "$HOME/.qc/qc-index.cfg" "$HOME/.qc/qc-index.cfg.new"
    execute cp "$idx_cfg_backup" "$HOME/.qc/qc-index.cfg"
fi

# Add to .bashrc
echo
echo "Configuring .bashrc"
add_to_init_file "$HOME/.bashrc"

# Add to .kshrc
echo
echo "Configuring .kshrc"
add_to_init_file "$HOME/.kshrc"

# Add to .zshrc
echo
echo "Configuring .zshrc"
add_to_init_file "$HOME/.zshrc"

echo
echo "Configuring crontab"
add_to_crontab


# run initial update
echo
echo "Running initial index build ... this might take a while ..."
execute "$HOME/.qc/qc-build-index.sh"

echo
echo
echo "Now start a new shell or source '$HOME/.qc/$rc_file'"
echo
if [ "$execute" != "true" ]; then
    echo "=================================================="
    echo " Simulation mode - use '-X' to really execute"
    echo "=================================================="
    echo
fi
exit 0

__ARCHIVE_BELOW__
