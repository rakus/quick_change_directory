# shellcheck shell=bash
#
# FILE: quick_change_directory.shinc
#
# Provides the shell function 'qc' for index based quick change directory.
# Qc searches a index file for a matching directory and then changes to it.
# If multiple directories match, the user is presented a list to choose from.
#
# When sourcing this file, it checks for index files in '$HOME/.qc'. If none
# is found a default index is created. This might take a while.
#
# See README.md for a full description.
#
# AUTHOR: Ralf Schandl
#

# Directory for qc index files
[ -z "${QC_DIR:-}" ] && QC_DIR=$HOME/.qc

# Manual index file. Stores directory names and bookmarked directories. This
# file is managed using the command 'dstore'.
QC_DSTORE_INDEX=$QC_DIR/index.dstore

if [ -z "${__QC_TEST__:-}" ]; then
    if ! ls "$QC_DIR"/*.index >/dev/null 2>&1; then
        echo "QuickChangeDirectory: No index files found - creating ..."
        qc-build-index.sh
    fi
    if [ ! -e "$QC_DSTORE_INDEX" ]; then
        touch "$QC_DSTORE_INDEX"
    fi
fi

function qc
{
    if [ $# -eq 0 ]; then
        # no argument - cd to home
        # shellcheck disable=SC2164 # returning with exit code below
        "cd"
        return $?
    elif [ "$1" = "-" ]; then
        # '-' - return to last dir
        # shellcheck disable=SC2164 # returning with exit code below
        "cd" -
        return $?
    fi

    local rc
    local result_file
    if ! result_file="$(mktemp -t qc-target.XXXXXXX)"; then
        return $?
    fi

    local PATH="$PATH:$QC_DIR"

    if qc_result_file="$result_file" qc-selector "$@"; then
        # shellcheck disable=SC2164 # returning with exit code below
        "cd" "$(cat "$result_file")"
        rc=$?
    else
        rc=$?
    fi
    rm -f "$result_file"
    return "$rc"
}

# vim:ft=sh:et:ts=4:sw=4
